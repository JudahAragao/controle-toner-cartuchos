// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model StatusCartuchos {
  id String @id @default(uuid())
  nome String
  cartuchos Cartuchos[]

  @@map("statusCartuchos")
}

model Cartuchos {
  id String @id @default(uuid())
  statusCartuchoId String
  statusCartuchos StatusCartuchos? @relation(fields: [statusCartuchoId], references: [id])
  abastecimentos Abastecimentos[]
  codigo String
  marca String
  referencia String

  @@map("cartuchos")
}

model Abastecimentos {
  id String @id @default(uuid())
  cartuchoId String
  cartuchos Cartuchos? @relation(fields: [cartuchoId], references: [id])
  impressoraId String
  impressoras Impressoras? @relation(fields: [impressoraId], references: [id])
  observacoes String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("abastecimentos")
}

model Impressoras {
  id String @id @default(uuid())
  setorId String
  setores Setores? @relation(fields: [setorId], references: [id])
  abastecimentos Abastecimentos[]
  marca String
  modelo String

  @@map("impressoras")
}

model Setores {
  id String @id @default(uuid())
  impressoras Impressoras[]
  nome String
  sigla String
}